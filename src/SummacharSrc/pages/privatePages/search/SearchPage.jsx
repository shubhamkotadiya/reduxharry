import React, { useContext, useEffect, useState } from 'react'
import { useRouteMatch } from "react-router";
import { Link, useLocation } from "react-router-dom";
import '../../../assets/css/search.css'
import Loader from '../../../components/Loader';
import Small_loader from '../../../assets/images/common/loader_small.gif'
import axios from 'axios';
import { getHeaders, getUserUuid } from "../../../common/helper";
import apiUrl from "../../../common/apiUrl";
import { useHistory } from "react-router-dom";
import PremiumPopUp from '../../../components/premiumPop'
import {isApp} from '../../../common/helper'
import NoData from '../../../components/NoData';
import {Store} from '../../../App'


function SearchPage() {
    const search = useContext(Store).search;
    
    const [isVisible, changeVisibility] = useState(false);
    const [ noDataVisibility,setNoDataVisibility]=useState(false);
    // const [previousSearch,setPreviousSearch] = useState([]);
    const [visibleHistory, setVisibleHistory] = useState(true);
    const history = useHistory();
    const location = useLocation();
    let { path, url } = useRouteMatch();
    const [loading, setLoading] = useState(false);
    // const [searchInput, setSearchInput] = useState(null);
    const [responseData, setResponseData] = useState();
    const [category, setCategory] = useState(location.pathname.split('/')[2]);
    const [historyAllVisible,setHistoryAllVisible] = useState(true);
    const [historyNewsVisible,setHistoryNewsVisible] = useState(false);
    const [historyActivityVisible,setHistoryActivityVisible] = useState(false);
    const [historyAcadVisible,setHistoryAcadVisible] = useState(false);




    const svgIcon = [<svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M14.5889 11.5801H10.5464C10.4765 11.5801 10.4072 11.5939 10.3426 11.6206C10.278 11.6474 10.2193 11.6866 10.1699 11.736C10.1204 11.7855 10.0812 11.8442 10.0545 11.9088C10.0277 11.9734 10.0139 12.0426 10.0139 12.1126V20.0851H15.1214V12.1126C15.1214 11.9714 15.0653 11.8359 14.9655 11.736C14.8656 11.6362 14.7301 11.5801 14.5889 11.5801ZM14.3489 19.3201H10.7864V12.3526H14.3489V19.3201Z" fill="#4D6BE8" />
        <path d="M14.589 10.8074H10.5465C10.201 10.8093 9.87017 10.9475 9.62586 11.1918C9.38155 11.4361 9.24342 11.7669 9.24146 12.1124V20.0849C9.24146 20.2838 9.32047 20.4746 9.46112 20.6152C9.60178 20.7559 9.79254 20.8349 9.99146 20.8349H15.1215C15.3204 20.8349 15.5111 20.7559 15.6518 20.6152C15.7924 20.4746 15.8715 20.2838 15.8715 20.0849V12.1124C15.8696 11.7707 15.7346 11.4432 15.4951 11.1996C15.2556 10.9559 14.9305 10.8152 14.589 10.8074ZM10.7865 12.3524H14.349V19.3199H10.7865V12.3524Z" fill="#777777" />
        <path d="M19.4714 7.50004L14.9714 4.02004C14.2764 3.47692 13.4197 3.18188 12.5377 3.18188C11.6556 3.18188 10.7989 3.47692 10.1039 4.02004L5.67141 7.50004C5.19792 7.87107 4.81629 8.34622 4.55615 8.88861C4.29601 9.431 4.16436 10.026 4.17141 10.6275V18.4275C4.17487 18.755 4.24289 19.0786 4.37159 19.3798C4.50029 19.6809 4.68713 19.9537 4.92141 20.1825C5.38419 20.6411 6.00995 20.8973 6.66141 20.895H10.0664C10.2653 20.895 10.4561 20.816 10.5967 20.6754C10.7374 20.5347 10.8164 20.344 10.8164 20.145V12.3525H14.3789V20.085C14.3789 20.284 14.4579 20.4747 14.5986 20.6154C14.7392 20.756 14.93 20.835 15.1289 20.835H18.5339C18.8619 20.8345 19.1863 20.7678 19.4879 20.639C19.7894 20.5101 20.0619 20.3217 20.2889 20.085C20.7564 19.6251 21.0256 19.0007 21.0389 18.345V10.59C21.0323 9.98924 20.8874 9.39803 20.6156 8.8622C20.3438 8.32636 19.9523 7.86028 19.4714 7.50004ZM19.4714 18.4275C19.466 18.6748 19.3668 18.9107 19.1939 19.0875C19.1073 19.1741 19.0044 19.2425 18.8911 19.2889C18.7777 19.3353 18.6563 19.3586 18.5339 19.3575H15.8939V12.1125C15.8919 11.767 15.7538 11.4363 15.5095 11.1919C15.2652 10.9476 14.9344 10.8095 14.5889 10.8075H10.5464C10.2009 10.8095 9.87012 10.9476 9.62581 11.1919C9.3815 11.4363 9.24338 11.767 9.24141 12.1125V19.32H6.60891C6.36574 19.3198 6.13204 19.2257 5.95641 19.0575C5.78519 18.8772 5.6887 18.6387 5.68641 18.39V10.59C5.68348 10.2211 5.76591 9.85655 5.92724 9.52478C6.08857 9.19301 6.32444 8.90305 6.61641 8.67754L11.0714 5.19754C11.5004 4.86427 12.0282 4.68335 12.5714 4.68335C13.1147 4.68335 13.6424 4.86427 14.0714 5.19754L18.5714 8.68504C18.8642 8.90861 19.1012 9.19695 19.2638 9.52747C19.4265 9.85798 19.5104 10.2217 19.5089 10.59L19.4714 18.4275Z" fill="#777777" />
    </svg>,
    <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M18.8175 9.29241L18.195 8.81241L17.595 8.34741V11.4824C17.5905 11.7727 17.5208 12.0582 17.3909 12.3179C17.2611 12.5775 17.0745 12.8047 16.845 12.9824L13.1475 15.8099C12.8195 16.0614 12.4194 16.2008 12.0062 16.2075C11.593 16.2143 11.1885 16.088 10.8525 15.8474L7.0275 13.1099C6.77883 12.9312 6.57633 12.6958 6.43678 12.4232C6.29722 12.1506 6.22462 11.8487 6.225 11.5424V8.49741L5.625 8.96241L5.1975 9.29241C4.96797 9.47016 4.78138 9.69728 4.65155 9.95694C4.52172 10.2166 4.45198 10.5021 4.4475 10.7924V17.5424C4.44353 17.7974 4.4902 18.0507 4.58482 18.2875C4.67944 18.5244 4.82011 18.7401 4.9987 18.9221C5.17729 19.1042 5.39023 19.249 5.62519 19.3482C5.86015 19.4474 6.11246 19.499 6.3675 19.4999H17.6175C17.8713 19.4999 18.1225 19.4498 18.3569 19.3525C18.5912 19.2551 18.804 19.1125 18.9831 18.9327C19.1622 18.7529 19.304 18.5396 19.4004 18.3048C19.4969 18.0701 19.546 17.8187 19.545 17.5649V10.8149C19.5455 10.5229 19.4804 10.2344 19.3545 9.9709C19.2285 9.70738 19.045 9.47551 18.8175 9.29241ZM18.96 17.5424C18.96 17.8952 18.8204 18.2336 18.5716 18.4838C18.3229 18.7339 17.9853 18.8754 17.6325 18.8774H6.3825C6.20718 18.8774 6.03359 18.8429 5.87162 18.7758C5.70965 18.7087 5.56248 18.6104 5.43851 18.4864C5.31455 18.3624 5.21621 18.2153 5.14912 18.0533C5.08203 17.8913 5.0475 17.7177 5.0475 17.5424V10.7924C5.04767 10.5921 5.09293 10.3943 5.17991 10.2139C5.2669 10.0334 5.39339 9.87484 5.55 9.74991H5.61V11.6099C5.61017 12.0119 5.70619 12.408 5.89011 12.7654C6.07403 13.1228 6.34053 13.4311 6.6675 13.6649L10.5 16.3724C10.9401 16.6852 11.4688 16.8489 12.0086 16.8395C12.5485 16.83 13.0711 16.648 13.5 16.3199L17.19 13.4999C17.5009 13.2631 17.7533 12.958 17.9275 12.6082C18.1018 12.2584 18.1933 11.8732 18.195 11.4824V9.56991L18.45 9.76491C18.6091 9.89141 18.7377 10.0522 18.826 10.2353C18.9143 10.4184 18.9601 10.6191 18.96 10.8224V17.5424Z" fill="#42F2F7" />
        <path d="M19.185 8.81989L18.1875 8.06989L17.4375 7.49989L16.9725 7.13989V11.5049C16.9744 11.7026 16.9331 11.8983 16.8515 12.0784C16.7699 12.2584 16.6499 12.4185 16.5 12.5474L12.75 15.3674C12.5205 15.539 12.2416 15.6318 11.955 15.6318C11.6684 15.6318 11.3895 15.539 11.16 15.3674L7.36503 12.6599C7.19372 12.5366 7.05411 12.3744 6.95763 12.1866C6.86116 11.9989 6.81057 11.791 6.81003 11.5799V7.27489L6.27753 7.68739L5.61003 8.20489L4.81503 8.81989C4.50856 9.05589 4.26053 9.35926 4.09015 9.70652C3.91978 10.0538 3.83162 10.4356 3.83253 10.8224V17.5724C3.83253 18.2447 4.09961 18.8895 4.57501 19.3649C5.05042 19.8403 5.6952 20.1074 6.36753 20.1074H17.6175C17.9501 20.1074 18.2794 20.0418 18.5865 19.9143C18.8936 19.7868 19.1726 19.5999 19.4074 19.3645C19.6422 19.129 19.8282 18.8494 19.9548 18.5419C20.0814 18.2344 20.146 17.9049 20.145 17.5724V10.8224C20.1486 10.4375 20.0639 10.0568 19.8975 9.70969C19.7311 9.36257 19.4874 9.05818 19.185 8.81989ZM18.96 17.5424C18.96 17.8952 18.8204 18.2336 18.5717 18.4837C18.3229 18.7339 17.9853 18.8754 17.6325 18.8774H6.38253C6.20721 18.8774 6.03361 18.8429 5.87164 18.7758C5.70967 18.7087 5.5625 18.6103 5.43854 18.4864C5.31457 18.3624 5.21624 18.2152 5.14915 18.0533C5.08206 17.8913 5.04753 17.7177 5.04753 17.5424V10.7924C5.0477 10.5921 5.09295 10.3943 5.17994 10.2139C5.26693 10.0334 5.39341 9.87482 5.55003 9.74989H5.61003V11.6099C5.61019 12.0118 5.70622 12.4079 5.89014 12.7653C6.07405 13.1227 6.34056 13.4311 6.66753 13.6649L10.5 16.3724C10.9401 16.6852 11.4688 16.8489 12.0087 16.8395C12.5485 16.83 13.0712 16.6479 13.5 16.3199L17.19 13.4999C17.5009 13.2631 17.7533 12.958 17.9275 12.6082C18.1018 12.2584 18.1933 11.8732 18.195 11.4824V9.56989L18.45 9.76489C18.6092 9.89139 18.7377 10.0522 18.826 10.2353C18.9143 10.4184 18.9601 10.6191 18.96 10.8224V17.5424Z" fill="#777777" />
        <path d="M14.115 5.65505L13.185 4.90505C12.8459 4.64232 12.429 4.49976 12 4.49976C11.571 4.49976 11.1542 4.64232 10.815 4.90505L9.88501 5.65505L9.13501 6.25505H14.91L14.115 5.65505ZM10.8675 5.65505L11.1825 5.40755C11.416 5.22509 11.7037 5.12597 12 5.12597C12.2963 5.12597 12.5841 5.22509 12.8175 5.40755L13.1325 5.65505H10.8675Z" fill="#42F2F7" />
        <path d="M15.885 6.27006L15.0975 5.65506L13.5525 4.45506C13.1076 4.11205 12.5617 3.92603 12 3.92603C11.4382 3.92603 10.8923 4.11205 10.4475 4.45506L8.90247 5.65506L8.15247 6.25506L7.40247 6.85506H16.6425L15.885 6.27006ZM11.1825 5.40756C11.4159 5.2251 11.7037 5.12598 12 5.12598C12.2963 5.12598 12.584 5.2251 12.8175 5.40756L13.1325 5.65506H10.8825L11.1825 5.40756Z" fill="#777777" />
        <path d="M15.09 7.55249H8.70752V8.75249H15.09V7.55249Z" fill="#F49097" />
        <path d="M15.09 9.71997H8.70752V10.92H15.09V9.71997Z" fill="#F49097" />
        <path d="M15.09 11.8274H8.70752V13.0274H15.09V11.8274Z" fill="#F49097" />
        <path d="M17.46 7.49998C17.3324 7.17434 17.1182 6.88976 16.8406 6.67695C16.563 6.46415 16.2326 6.3312 15.885 6.29248H15.66H8.16001C7.73646 6.29349 7.32514 6.43452 6.99008 6.69361C6.65503 6.9527 6.41505 7.31531 6.30751 7.72498C6.26199 7.88858 6.23928 8.05767 6.24001 8.22748V11.6175C6.23963 11.9237 6.31223 12.2256 6.45179 12.4982C6.59134 12.7708 6.79384 13.0062 7.04251 13.185L10.8675 15.9225C11.2035 16.1631 11.608 16.2893 12.0212 16.2826C12.4344 16.2758 12.8345 16.1364 13.1625 15.885L16.86 13.0575C17.0895 12.8797 17.2761 12.6526 17.406 12.393C17.5358 12.1333 17.6055 11.8478 17.61 11.5575V8.18998C17.6047 7.95249 17.5538 7.71824 17.46 7.49998ZM16.995 11.505C16.9942 11.7044 16.9494 11.9013 16.8638 12.0815C16.7783 12.2616 16.654 12.4208 16.5 12.5475L12.75 15.3675C12.5205 15.5391 12.2416 15.6319 11.955 15.6319C11.6684 15.6319 11.3895 15.5391 11.16 15.3675L7.36501 12.66C7.19371 12.5367 7.05409 12.3745 6.95761 12.1867C6.86114 11.999 6.81055 11.7911 6.81001 11.58V8.18998C6.81 7.83721 6.94962 7.49878 7.19837 7.24863C7.44711 6.99849 7.78475 6.85696 8.13751 6.85498H15.6375C15.9916 6.85498 16.3311 6.99563 16.5815 7.24599C16.8319 7.49635 16.9725 7.83592 16.9725 8.18998L16.995 11.505Z" fill="#F49097" />
        <path d="M18.1876 8.04753C18.153 7.40087 17.8715 6.79215 17.4012 6.34697C16.9309 5.90179 16.3077 5.65411 15.6601 5.65503H8.16008C7.82753 5.65503 7.49825 5.72065 7.19111 5.84814C6.88397 5.97563 6.60501 6.16247 6.37021 6.39797C6.13541 6.63346 5.94939 6.91298 5.82282 7.2205C5.69624 7.52801 5.63159 7.85749 5.63258 8.19003V11.58C5.63275 11.982 5.72877 12.3781 5.91269 12.7355C6.09661 13.0929 6.36311 13.4013 6.69008 13.635L10.5001 16.3725C10.9402 16.6854 11.4689 16.8491 12.0087 16.8396C12.5486 16.8302 13.0712 16.6481 13.5001 16.32L17.1901 13.5C17.501 13.2632 17.7533 12.9582 17.9276 12.6083C18.1018 12.2585 18.1934 11.8733 18.1951 11.4825V8.19003C18.1963 8.14241 18.1938 8.09476 18.1876 8.04753ZM16.4626 12.5475L12.7501 15.3675C12.5206 15.5392 12.2417 15.6319 11.9551 15.6319C11.6685 15.6319 11.3896 15.5392 11.1601 15.3675L7.36508 12.66C7.19378 12.5367 7.05416 12.3745 6.95768 12.1868C6.86121 11.999 6.81062 11.7911 6.81008 11.58V8.19003C6.81007 7.83726 6.9497 7.49883 7.19844 7.24869C7.44718 6.99854 7.78482 6.85701 8.13758 6.85503H15.6376C15.9916 6.85503 16.3312 6.99568 16.5816 7.24604C16.8319 7.49641 16.9726 7.83597 16.9726 8.19003V11.4825C16.9778 11.684 16.9381 11.8841 16.8564 12.0683C16.7747 12.2525 16.653 12.4162 16.5001 12.5475H16.4626Z" fill="#777777" />
        <path d="M15.09 7.55249H8.70752V8.75249H15.09V7.55249Z" fill="#777777" />
        <path d="M15.09 9.71997H8.70752V10.92H15.09V9.71997Z" fill="#777777" />
        <path d="M15.09 11.8274H8.70752V13.0274H15.09V11.8274Z" fill="#777777" />
    </svg>,
    <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M18.2478 9.06001C18.0891 7.44868 17.299 5.96568 16.0503 4.93501C15.343 4.35587 14.5159 3.94107 13.6287 3.72057C12.7415 3.50007 11.8165 3.47939 10.9203 3.66001C9.73155 3.90993 8.64342 4.5063 7.79318 5.37389C6.94294 6.24148 6.36868 7.34144 6.14282 8.53501C5.97347 9.42985 6.00399 10.351 6.23218 11.2327C6.46038 12.1144 6.88061 12.9347 7.46282 13.635C8.00463 14.2475 8.31506 15.0302 8.34032 15.8475V18.15C8.34032 18.452 8.39993 18.7511 8.51573 19.03C8.63154 19.3089 8.80126 19.5623 9.01516 19.7755C9.22907 19.9887 9.48295 20.1576 9.76226 20.2725C10.0416 20.3874 10.3408 20.446 10.6428 20.445H13.7178C14.0198 20.446 14.3191 20.3874 14.5984 20.2725C14.8777 20.1576 15.1316 19.9887 15.3455 19.7755C15.5594 19.5623 15.7291 19.3089 15.8449 19.03C15.9607 18.7511 16.0203 18.452 16.0203 18.15V15.99C16.043 15.0893 16.3739 14.2237 16.9578 13.5375C17.9599 12.2727 18.4234 10.6641 18.2478 9.06001ZM14.4453 18.15C14.4453 18.3489 14.3663 18.5397 14.2257 18.6803C14.085 18.821 13.8942 18.9 13.6953 18.9H10.6428C10.4439 18.9 10.2531 18.821 10.1125 18.6803C9.97184 18.5397 9.89282 18.3489 9.89282 18.15V17.4H14.4978L14.4453 18.15ZM15.7278 12.585C14.9548 13.5029 14.5043 14.649 14.4453 15.8475H12.8928V13.5375C12.8934 13.437 12.8738 13.3374 12.8351 13.2447C12.7965 13.1519 12.7396 13.0679 12.6678 12.9975C12.6011 12.9234 12.5204 12.8634 12.4302 12.8209C12.3401 12.7784 12.2424 12.7543 12.1428 12.75C11.9382 12.7517 11.7421 12.8323 11.5953 12.975C11.5249 13.046 11.4694 13.1303 11.432 13.2231C11.3947 13.3158 11.3763 13.4151 11.3778 13.515V15.825H9.84032C9.81742 14.6465 9.38219 13.5133 8.61032 12.6225C7.85304 11.6963 7.48525 10.5121 7.58461 9.31985C7.68396 8.1276 8.24268 7.0206 9.14282 6.23251C9.74398 5.70807 10.4696 5.34655 11.2503 5.18251C11.9203 5.04729 12.612 5.06266 13.2753 5.22751C13.9415 5.38389 14.5626 5.69188 15.0903 6.12751C15.624 6.55767 16.0524 7.10407 16.3428 7.72501C16.6348 8.34154 16.786 9.01533 16.7853 9.69751C16.7828 10.7543 16.4084 11.7766 15.7278 12.585Z" fill="#777777" />
    </svg>,

    <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M20.3642 9.135L12.0542 4.5L2.52173 9.42L4.46423 10.5L5.15423 10.8975H5.21423L11.7317 14.6475L18.4817 10.9725L19.1942 10.5825L20.4017 9.9225L21.1517 9.525L20.3642 9.135ZM18.0242 10.26L11.7017 13.7175L5.58173 10.2225L4.25423 9.4725L12.0392 5.4675L19.3667 9.525L18.0242 10.26Z" fill="#CD4631" />
        <path d="M21.4818 8.81255L21.2943 8.70755L12.4518 3.81005C12.336 3.74959 12.2074 3.71802 12.0768 3.71802C11.9462 3.71802 11.8175 3.74959 11.7018 3.81005L2.14678 8.68505C2.01692 8.7561 1.90856 8.86079 1.83308 8.98813C1.7576 9.11547 1.71777 9.26077 1.71777 9.4088C1.71777 9.55683 1.7576 9.70213 1.83308 9.82947C1.90856 9.95681 2.01692 10.0615 2.14678 10.1326L4.39678 11.4151L6.04678 12.3601L11.2968 15.3601C11.357 15.396 11.423 15.4214 11.4918 15.4351C11.5613 15.4465 11.6322 15.4465 11.7018 15.4351C11.8404 15.4368 11.9772 15.4032 12.0993 15.3376L17.6118 12.3376L18.4368 11.8801L19.2618 11.4301L21.3093 10.3126L21.4893 10.2151C21.6191 10.144 21.7275 10.0393 21.803 9.91197C21.8785 9.78463 21.9183 9.63933 21.9183 9.4913C21.9183 9.34327 21.8785 9.19797 21.803 9.07063C21.7275 8.94329 21.6191 8.8386 21.4893 8.76755L21.4818 8.81255ZM11.7318 13.7176L5.58178 10.2226L4.25428 9.47255L12.0393 5.46755L19.3668 9.52505L18.0243 10.2751L11.7318 13.7176Z" fill="#777777" />
        <path d="M11.6942 14.6626L5.21423 10.9351V17.7676C5.21873 18.2215 5.40197 18.6553 5.72423 18.9751C6.03043 19.2965 6.45053 19.485 6.89423 19.5001H16.7042C16.9298 19.5002 17.1532 19.4559 17.3617 19.3697C17.5702 19.2835 17.7596 19.157 17.9192 18.9976C18.0795 18.8401 18.2065 18.6521 18.2928 18.4447C18.3791 18.2373 18.423 18.0147 18.4217 17.7901V11.0401L11.6942 14.6626ZM17.5967 17.7676C17.5976 17.8837 17.5747 17.9988 17.5296 18.1058C17.4844 18.2129 17.418 18.3096 17.3342 18.3901C17.1664 18.5562 16.9404 18.6504 16.7042 18.6526H6.89423C6.77661 18.6513 6.6604 18.6268 6.55228 18.5804C6.44416 18.5341 6.34627 18.4669 6.26423 18.3826C6.18208 18.3024 6.11659 18.2068 6.07154 18.1013C6.02649 17.9957 6.00276 17.8823 6.00173 17.7676V12.3601L11.2517 15.3601C11.312 15.396 11.3779 15.4214 11.4467 15.4351C11.5163 15.4465 11.5872 15.4465 11.6567 15.4351C11.7954 15.4368 11.9321 15.4032 12.0542 15.3376L17.5667 12.3376L17.5967 17.7676Z" fill="#42F2F7" />
        <path d="M19.1493 10.59C19.0772 10.4591 18.9709 10.3502 18.8418 10.275C18.717 10.2047 18.5762 10.1678 18.433 10.1678C18.2898 10.1678 18.149 10.2047 18.0243 10.275L11.7018 13.7325L5.58175 10.2225C5.45685 10.1486 5.31438 10.1096 5.16925 10.1096C5.02412 10.1096 4.88166 10.1486 4.75675 10.2225C4.6392 10.2913 4.5391 10.3862 4.46425 10.5C4.39565 10.6213 4.35948 10.7582 4.35925 10.8975V17.76C4.36682 18.4279 4.63612 19.0661 5.10925 19.5375C5.34353 19.7749 5.62261 19.9635 5.93031 20.0922C6.23801 20.221 6.56821 20.2874 6.90175 20.2875H16.7043C17.377 20.2823 18.0207 20.0129 18.4968 19.5375C18.7351 19.3024 18.9241 19.0221 19.0529 18.713C19.1817 18.4039 19.2476 18.0723 19.2468 17.7375V10.9875C19.2458 10.8492 19.2124 10.7131 19.1493 10.59ZM17.5968 17.7675C17.5976 17.8837 17.5747 17.9988 17.5296 18.1058C17.4845 18.2128 17.418 18.3095 17.3343 18.39C17.1664 18.5562 16.9404 18.6503 16.7043 18.6525H6.89425C6.77663 18.6513 6.66042 18.6267 6.5523 18.5804C6.44418 18.5341 6.34629 18.4668 6.26425 18.3825C6.1821 18.3024 6.11661 18.2068 6.07156 18.1012C6.02651 17.9957 6.00278 17.8823 6.00175 17.7675V12.36L11.2518 15.36C11.312 15.396 11.378 15.4213 11.4468 15.435C11.5163 15.4465 11.5872 15.4465 11.6568 15.435C11.7954 15.4368 11.9322 15.4032 12.0543 15.3375L17.5668 12.3375L17.5968 17.7675Z" fill="#777777" />
        <path d="M4.34424 10.9349V10.9199H6.00174L4.34424 10.9349Z" fill="#777777" />
        <path d="M17.5968 10.9799V10.9724H19.2468L17.5968 10.9799Z" fill="#777777" />
        <path d="M22.9068 15.7501C22.688 15.7501 22.4782 15.6632 22.3235 15.5085C22.1687 15.3538 22.0818 15.1439 22.0818 14.9251V10.3501H21.0768C20.8706 10.3305 20.6791 10.2347 20.5398 10.0814C20.4005 9.9282 20.3232 9.72851 20.3232 9.52138C20.3232 9.31425 20.4005 9.11456 20.5398 8.96131C20.6791 8.80806 20.8706 8.71226 21.0768 8.69263H22.9068C23.1256 8.69263 23.3355 8.77955 23.4902 8.93426C23.6449 9.08898 23.7318 9.29882 23.7318 9.51763V14.9251C23.7318 15.1439 23.6449 15.3538 23.4902 15.5085C23.3355 15.6632 23.1256 15.7501 22.9068 15.7501Z" fill="#777777" />
    </svg>

    ]

    const svgIconActive = [
        <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M15.4072 12.1126V20.0851H10.2997V12.1126C10.2997 12.0426 10.3135 11.9734 10.3402 11.9088C10.367 11.8442 10.4062 11.7855 10.4556 11.736C10.5051 11.6866 10.5638 11.6474 10.6284 11.6206C10.693 11.5939 10.7623 11.5801 10.8322 11.5801H14.8747C15.0159 11.5801 15.1514 11.6362 15.2512 11.736C15.3511 11.8359 15.4072 11.9714 15.4072 12.1126Z" fill="#4D6BE8" />
            <path d="M15.4072 20.8574H10.2997C10.1008 20.8574 9.91 20.7784 9.76935 20.6377C9.6287 20.4971 9.54968 20.3063 9.54968 20.1074V12.1124C9.54968 11.941 9.58344 11.7713 9.64902 11.613C9.7146 11.4546 9.81073 11.3108 9.93191 11.1896C10.0531 11.0684 10.197 10.9723 10.3553 10.9067C10.5136 10.8411 10.6833 10.8074 10.8547 10.8074H14.8972C15.0686 10.8074 15.2383 10.8411 15.3966 10.9067C15.5549 10.9723 15.6988 11.0684 15.82 11.1896C15.9411 11.3108 16.0373 11.4546 16.1028 11.613C16.1684 11.7713 16.2022 11.941 16.2022 12.1124V20.0849C16.2055 20.1891 16.187 20.293 16.148 20.3897C16.1089 20.4864 16.05 20.5739 15.9752 20.6466C15.9004 20.7193 15.8112 20.7756 15.7134 20.8119C15.6156 20.8482 15.5113 20.8637 15.4072 20.8574ZM11.0722 19.3124H14.6347V12.3524H11.0722V19.3124Z" fill="#231F20" />
            <path d="M20.5147 10.5826V18.3901C20.5127 18.8403 20.3324 19.2714 20.0134 19.5891C19.6943 19.9067 19.2624 20.0851 18.8122 20.0851H15.4072V12.1126C15.4072 12.0427 15.3934 11.9734 15.3666 11.9088C15.3399 11.8442 15.3006 11.7855 15.2512 11.736C15.2017 11.6866 15.143 11.6474 15.0784 11.6206C15.0138 11.5939 14.9446 11.5801 14.8747 11.5801H10.8322C10.7622 11.5801 10.693 11.5939 10.6284 11.6206C10.5638 11.6474 10.5051 11.6866 10.4556 11.736C10.4062 11.7855 10.367 11.8442 10.3402 11.9088C10.3134 11.9734 10.2997 12.0427 10.2997 12.1126V20.0851H6.89466C6.44334 20.0822 6.01063 19.9048 5.68716 19.5901C5.37495 19.2686 5.20011 18.8382 5.19966 18.3901V10.5826C5.19642 10.098 5.30505 9.61915 5.51708 9.18337C5.72912 8.74759 6.03884 8.36662 6.42216 8.07008L10.9222 4.59008C11.4824 4.1528 12.1727 3.91528 12.8834 3.91528C13.5941 3.91528 14.2844 4.1528 14.8447 4.59008L19.3447 8.07008C19.7179 8.37232 20.0173 8.75571 20.2201 9.1911C20.4228 9.62649 20.5236 10.1024 20.5147 10.5826Z" fill="#FFBD00" />
            <path d="M18.8123 20.8575H15.4073C15.2084 20.8575 15.0176 20.7785 14.8769 20.6378C14.7363 20.4972 14.6573 20.3064 14.6573 20.1075V12.3525H11.0723V20.085C11.0723 20.2839 10.9933 20.4747 10.8526 20.6153C10.7119 20.756 10.5212 20.835 10.3223 20.835H6.89477C6.24363 20.8356 5.61846 20.5796 5.15477 20.1225C4.68229 19.6598 4.41257 19.0287 4.40477 18.3675V10.5825C4.39829 9.98106 4.53019 9.38621 4.79029 8.84391C5.05038 8.30161 5.4317 7.82639 5.90477 7.45498L10.4048 3.97498C11.1014 3.43554 11.9575 3.14282 12.8385 3.14282C13.7196 3.14282 14.5757 3.43554 15.2723 3.97498L19.7723 7.46248C20.2452 7.83234 20.6265 8.30621 20.8866 8.8473C21.1468 9.38838 21.2787 9.98214 21.2723 10.5825V18.39C21.2574 19.0453 20.9884 19.6692 20.5223 20.13C20.0698 20.5874 19.4556 20.8487 18.8123 20.8575ZM16.1798 19.3125H18.8123C18.9347 19.3135 19.0561 19.2902 19.1694 19.2438C19.2827 19.1975 19.3857 19.129 19.4723 19.0425C19.6432 18.868 19.74 18.6342 19.7423 18.39V10.5825C19.744 10.2148 19.6611 9.85173 19.4998 9.52135C19.3385 9.19097 19.1032 8.90221 18.8123 8.67747L14.3573 5.19748C13.9299 4.86048 13.4015 4.67721 12.8573 4.67721C12.313 4.67721 11.7846 4.86048 11.3573 5.19748L6.85727 8.67747C6.56768 8.90298 6.33386 9.19208 6.1739 9.52241C6.01393 9.85275 5.93211 10.2155 5.93477 10.5825V18.39C5.93274 18.5117 5.95522 18.6325 6.00086 18.7454C6.0465 18.8582 6.11437 18.9607 6.20044 19.0468C6.28651 19.1329 6.38902 19.2007 6.50186 19.2464C6.6147 19.292 6.73557 19.3145 6.85727 19.3125H9.48977V12.1125C9.48977 11.9411 9.52352 11.7714 9.58911 11.6131C9.65469 11.4547 9.75081 11.3109 9.87199 11.1897C9.99318 11.0685 10.137 10.9724 10.2954 10.9068C10.4537 10.8412 10.6234 10.8075 10.7948 10.8075H14.8373C15.0086 10.8075 15.1783 10.8412 15.3367 10.9068C15.495 10.9724 15.6389 11.0685 15.76 11.1897C15.8812 11.3109 15.9774 11.4547 16.0429 11.6131C16.1085 11.7714 16.1423 11.9411 16.1423 12.1125L16.1798 19.3125Z" fill="#231F20" />
        </svg>,
        <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M19.8531 10.8226V17.5726C19.8511 18.0832 19.6474 18.5723 19.2864 18.9334C18.9253 19.2944 18.4362 19.4981 17.9256 19.5001H6.6756C6.16241 19.5001 5.67023 19.2962 5.30735 18.9333C4.94447 18.5705 4.7406 18.0783 4.7406 17.5651V10.8151C4.74454 10.5247 4.81404 10.239 4.94391 9.97925C5.07379 9.7195 5.26067 9.49246 5.4906 9.31509L6.5181 8.52009V11.6026C6.51858 11.9095 6.59233 12.2118 6.73321 12.4845C6.8741 12.7571 7.07805 12.9922 7.3281 13.1701L11.1456 15.9001C11.4823 16.1425 11.8882 16.2697 12.3031 16.263C12.7179 16.2562 13.1195 16.1158 13.4481 15.8626L17.1381 13.0426C17.3672 12.8645 17.5535 12.6373 17.6833 12.3777C17.8131 12.1181 17.8831 11.8328 17.8881 11.5426V8.34009L19.1106 9.29259C19.3431 9.47384 19.531 9.70603 19.6597 9.97127C19.7884 10.2365 19.8546 10.5278 19.8531 10.8226Z" fill="#42F2F7" />
            <path d="M17.9256 20.0774H6.67563C6.00392 20.0755 5.36028 19.8077 4.8853 19.3328C4.41033 18.8578 4.14261 18.2141 4.14063 17.5424V10.7924C4.13971 10.4046 4.22781 10.0217 4.39815 9.67318C4.56848 9.32471 4.81651 9.01997 5.12313 8.78243L7.09563 7.27493V11.5799C7.09618 11.791 7.14676 11.9989 7.24324 12.1867C7.33971 12.3744 7.47933 12.5366 7.65063 12.6599L11.4756 15.3899C11.704 15.5609 11.9816 15.6534 12.2669 15.6534C12.5522 15.6534 12.8298 15.5609 13.0581 15.3899L16.7856 12.5399C16.9488 12.4161 17.0811 12.2562 17.1722 12.0728C17.2632 11.8893 17.3106 11.6873 17.3106 11.4824V7.11743L19.5006 8.81243C19.8068 9.05036 20.0546 9.35517 20.2249 9.70356C20.3951 10.0519 20.4835 10.4347 20.4831 10.8224V17.5724C20.4752 18.2435 20.2016 18.884 19.7221 19.3535C19.2427 19.8231 18.5967 20.0834 17.9256 20.0774ZM5.89563 9.74993H5.83563C5.6747 9.8753 5.54445 10.0357 5.45478 10.2189C5.36511 10.4022 5.31837 10.6034 5.31813 10.8074V17.5574C5.31813 17.7327 5.35266 17.9063 5.41975 18.0683C5.48684 18.2303 5.58518 18.3775 5.70914 18.5014C5.83311 18.6254 5.98028 18.7237 6.14225 18.7908C6.30422 18.8579 6.47782 18.8924 6.65313 18.8924H17.9031C18.2559 18.8905 18.5935 18.7489 18.8423 18.4988C19.091 18.2486 19.2306 17.9102 19.2306 17.5574V10.8074C19.2348 10.605 19.1923 10.4043 19.1064 10.221C19.0206 10.0376 18.8937 9.87643 18.7356 9.74993L18.4806 9.54743V11.4674C18.481 11.86 18.3912 12.2473 18.2183 12.5997C18.0453 12.9521 17.7938 13.2601 17.4831 13.4999L13.7856 16.3199C13.3564 16.648 12.8332 16.8295 12.2931 16.8376C11.7529 16.8457 11.2245 16.68 10.7856 16.3649L6.95313 13.6349C6.62705 13.4003 6.36121 13.0917 6.17739 12.7345C5.99357 12.3773 5.89702 11.9817 5.89563 11.5799V9.74993Z" fill="#231F20" />
            <path d="M15.1807 6.24757H9.39819L11.1082 4.92757C11.4462 4.66545 11.8617 4.52319 12.2894 4.52319C12.7172 4.52319 13.1327 4.66545 13.4707 4.92757L15.1807 6.24757Z" fill="#42F2F7" />
            <path d="M16.9357 6.84751H7.64319L10.7407 4.45501C11.1828 4.10894 11.728 3.9209 12.2894 3.9209C12.8509 3.9209 13.3961 4.10894 13.8382 4.45501L16.9357 6.84751ZM11.1532 5.64751H13.4032L13.0882 5.40751C12.8554 5.22688 12.5691 5.12885 12.2744 5.12885C11.9798 5.12885 11.6935 5.22688 11.4607 5.40751L11.1532 5.64751Z" fill="#231F20" />
            <path d="M17.8807 8.18245V11.4824C17.8757 11.7726 17.8057 12.058 17.6759 12.3176C17.5462 12.5771 17.3599 12.8043 17.1307 12.9824L13.4407 15.8024C13.1121 16.0557 12.7105 16.1961 12.2957 16.2028C11.8809 16.2096 11.4749 16.0823 11.1382 15.8399L7.30573 13.1474C7.05568 12.9695 6.85173 12.7345 6.71084 12.4618C6.56995 12.1892 6.4962 11.8868 6.49573 11.5799V8.18245C6.49572 7.67055 6.69856 7.17951 7.05982 6.81684C7.42108 6.45417 7.91133 6.24943 8.42323 6.24745H15.9232C16.1792 6.24447 16.4333 6.29232 16.6706 6.38823C16.908 6.48414 17.124 6.6262 17.306 6.80618C17.4881 6.98616 17.6327 7.20048 17.7313 7.43672C17.83 7.67296 17.8807 7.92643 17.8807 8.18245Z" fill="#F49097" />
            <path d="M12.2856 16.845C11.7469 16.8509 11.2208 16.6825 10.7856 16.365L6.95313 13.635C6.62705 13.4003 6.3612 13.0918 6.17739 12.7346C5.99357 12.3774 5.89701 11.9817 5.89563 11.58V8.18246C5.8976 7.51204 6.16428 6.86953 6.63764 6.39476C7.111 5.92 7.75272 5.65141 8.42313 5.64746H15.9231C16.5948 5.64944 17.2385 5.91715 17.7135 6.39213C18.1884 6.86711 18.4562 7.51075 18.4581 8.18246V11.4825C18.4588 11.8706 18.3715 12.2538 18.2026 12.6033C18.0337 12.9528 17.7877 13.2594 17.4831 13.5L13.7856 16.32C13.3556 16.6526 12.8293 16.8369 12.2856 16.845ZM8.42313 6.84746C8.07037 6.84944 7.73273 6.99097 7.48399 7.24111C7.23525 7.49126 7.09562 7.82969 7.09563 8.18246V11.58C7.09617 11.791 7.14676 11.999 7.24323 12.1867C7.33971 12.3744 7.47933 12.5366 7.65063 12.66L11.4756 15.39C11.704 15.561 11.9816 15.6534 12.2669 15.6534C12.5522 15.6534 12.8298 15.561 13.0581 15.39L16.7856 12.54C16.9488 12.4161 17.0811 12.2562 17.1722 12.0728C17.2632 11.8893 17.3106 11.6873 17.3106 11.4825V8.18246C17.3106 7.8284 17.17 7.48883 16.9196 7.23847C16.6693 6.98811 16.3297 6.84746 15.9756 6.84746H8.42313Z" fill="#231F20" />
            <path d="M15.3757 7.54492H8.99316V8.74492H15.3757V7.54492Z" fill="#231F20" />
            <path d="M15.3757 9.71997H8.99316V10.92H15.3757V9.71997Z" fill="#231F20" />
            <path d="M15.3757 11.8201H8.99316V13.0201H15.3757V11.8201Z" fill="#231F20" />
        </svg>,
        <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M18.5411 9.06008C18.3781 7.44834 17.5857 5.96601 16.3361 4.93508C15.6296 4.36935 14.8079 3.96491 13.9286 3.75008C12.8952 3.49736 11.8141 3.51503 10.7895 3.8014C9.7649 4.08776 8.8313 4.63317 8.07865 5.38508C7.01287 6.47471 6.38735 7.91976 6.32229 9.44257C6.25722 10.9654 6.7572 12.4585 7.72615 13.6351C8.26797 14.2446 8.57854 15.025 8.60365 15.8401V18.1426C8.60088 18.4453 8.65923 18.7455 8.77522 19.0252C8.8912 19.3048 9.06243 19.5582 9.27865 19.7701C9.7102 20.202 10.2956 20.4448 10.9061 20.4451H13.9811C14.2839 20.4479 14.5841 20.3895 14.8637 20.2735C15.1434 20.1575 15.3967 19.9863 15.6087 19.7701C16.0405 19.3385 16.2833 18.7531 16.2836 18.1426V15.9826C16.305 15.0839 16.6362 14.2202 17.2211 13.5376C18.2318 12.2762 18.7059 10.668 18.5411 9.06008ZM14.7311 18.1426C14.7317 18.2431 14.7121 18.3427 14.6735 18.4354C14.6348 18.5282 14.5779 18.6122 14.5062 18.6826C14.4364 18.7557 14.3527 18.814 14.2599 18.854C14.1671 18.8939 14.0672 18.9147 13.9661 18.9151H10.9286C10.8276 18.9147 10.7277 18.8939 10.6349 18.854C10.5421 18.814 10.4584 18.7557 10.3886 18.6826C10.3169 18.6122 10.26 18.5282 10.2213 18.4354C10.1827 18.3427 10.1631 18.2431 10.1636 18.1426V17.3926H14.7687L14.7311 18.1426ZM16.0137 12.5851C15.2407 13.5 14.7901 14.6438 14.7311 15.8401H13.1786V13.5376C13.1786 13.3387 13.0996 13.1479 12.959 13.0073C12.8183 12.8666 12.6276 12.7876 12.4286 12.7876C12.2249 12.7865 12.0286 12.8645 11.8812 13.0051C11.8098 13.0769 11.7538 13.1625 11.7164 13.2566C11.679 13.3507 11.6611 13.4514 11.6636 13.5526V15.8551H10.1262C10.1047 14.6786 9.66916 13.5473 8.89615 12.6601C8.37898 12.0466 8.03196 11.308 7.88981 10.5183C7.74766 9.72861 7.81537 8.91542 8.08615 8.16008C8.32931 7.46152 8.73743 6.83195 9.27586 6.3248C9.8143 5.81765 10.4671 5.4479 11.179 5.24693C11.8908 5.04597 12.6407 5.01972 13.3648 5.17042C14.089 5.32112 14.7661 5.64432 15.3386 6.11258C15.8705 6.54152 16.2987 7.08504 16.5911 7.70258C16.8833 8.32173 17.0344 8.99798 17.0336 9.68258C17.0452 10.7399 16.6841 11.7675 16.0137 12.5851Z" fill="black" />
            <path d="M14.7311 17.3774V18.1274C14.7317 18.2279 14.7121 18.3275 14.6734 18.4203C14.6348 18.513 14.5779 18.5971 14.5061 18.6674C14.4364 18.7406 14.3526 18.7989 14.2598 18.8388C14.167 18.8788 14.0671 18.8996 13.9661 18.8999H10.9286C10.8276 18.8996 10.7276 18.8788 10.6349 18.8388C10.5421 18.7989 10.4583 18.7406 10.3886 18.6674C10.3168 18.5971 10.2599 18.513 10.2213 18.4203C10.1826 18.3275 10.163 18.2279 10.1636 18.1274V17.3774H14.7311Z" fill="#067BC2" />
            <path d="M17.0336 9.69757C17.0416 10.7497 16.6807 11.7714 16.0136 12.5851C15.2406 13.5 14.79 14.6438 14.7311 15.8401H13.1786V13.5376C13.1786 13.3387 13.0996 13.1479 12.9589 13.0072C12.8183 12.8666 12.6275 12.7876 12.4286 12.7876C12.2248 12.7865 12.0286 12.8645 11.8811 13.0051C11.8097 13.0769 11.7537 13.1625 11.7163 13.2566C11.6789 13.3507 11.661 13.4514 11.6636 13.5526V15.8551H10.1261C10.1046 14.6786 9.66909 13.5473 8.89608 12.6601C8.37891 12.0466 8.03189 11.308 7.88974 10.5183C7.74759 9.7286 7.8153 8.9154 8.08608 8.16007C8.32924 7.46151 8.73736 6.83194 9.2758 6.32479C9.81423 5.81764 10.4671 5.44788 11.1789 5.24692C11.8908 5.04595 12.6406 5.01971 13.3647 5.17041C14.0889 5.32111 14.766 5.64431 15.3386 6.11257C15.8705 6.5415 16.2986 7.08503 16.5911 7.70257C16.8854 8.32629 17.0366 9.00791 17.0336 9.69757Z" fill="#F5E960" />
        </svg>,
        <svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M20.37 9.53246L17.7075 10.98L10.9725 14.6625L4.46249 10.935L1.8075 9.41246L11.34 4.52246L20.37 9.53246Z" fill="#CD4631" />
            <path d="M10.9724 15.4874C10.8299 15.4862 10.6902 15.4474 10.5674 15.3749L1.39494 10.1249C1.26416 10.0496 1.15654 9.93984 1.08381 9.8076C1.01108 9.67536 0.976016 9.5257 0.982437 9.37492C0.980481 9.22047 1.02154 9.06851 1.10101 8.93606C1.18048 8.80361 1.29523 8.69588 1.43244 8.62492L10.9649 3.78742C11.0811 3.72816 11.2096 3.69727 11.3399 3.69727C11.4703 3.69727 11.5988 3.72816 11.7149 3.78742L20.7149 8.78992C20.8474 8.86454 20.9571 8.97372 21.0324 9.1058C21.1077 9.23788 21.1457 9.38792 21.1424 9.53992C21.1484 9.6933 21.1107 9.84524 21.0337 9.97802C20.9567 10.1108 20.8436 10.219 20.7074 10.2899L11.3699 15.3824C11.2487 15.451 11.1118 15.4872 10.9724 15.4874ZM3.53994 9.48742L10.9874 13.7399L18.6524 9.52492L11.3249 5.45992L3.53994 9.48742Z" fill="#231F20" />
            <path d="M17.7075 10.9876V17.7376C17.7086 17.9611 17.6646 18.1825 17.5783 18.3887C17.492 18.5948 17.365 18.7815 17.205 18.9376C17.046 19.0984 16.8569 19.2262 16.6484 19.3137C16.4399 19.4012 16.2161 19.4467 15.99 19.4476H6.18C5.73919 19.4326 5.32051 19.2508 5.00863 18.9389C4.69676 18.627 4.51496 18.2084 4.5 17.7676V10.9351L11.0175 14.6851L17.7075 10.9876Z" fill="#42F2F7" />
            <path d="M15.9899 20.3024H6.1799C5.51125 20.2967 4.87128 20.03 4.39636 19.5593C3.92144 19.0886 3.64911 18.451 3.6374 17.7824V10.9349C3.63545 10.7909 3.67195 10.6489 3.74314 10.5237C3.81433 10.3984 3.91764 10.2944 4.0424 10.2224C4.16806 10.1507 4.31024 10.113 4.4549 10.113C4.59957 10.113 4.74174 10.1507 4.8674 10.2224L10.9874 13.7174L17.3099 10.2674C17.4375 10.1971 17.5815 10.1619 17.7272 10.1653C17.8729 10.1687 18.0151 10.2107 18.1393 10.2869C18.2635 10.3631 18.3653 10.4708 18.4343 10.5991C18.5034 10.7275 18.5372 10.8718 18.5324 11.0174V17.7674C18.5335 18.1012 18.4677 18.4317 18.3389 18.7396C18.2101 19.0475 18.0208 19.3264 17.7824 19.5599C17.3047 20.0319 16.6614 20.2984 15.9899 20.3024ZM5.2874 12.3599V17.7674C5.29324 18.0009 5.3896 18.223 5.55614 18.3867C5.72268 18.5505 5.94636 18.643 6.1799 18.6449H15.9899C16.2252 18.6455 16.4513 18.554 16.6199 18.3899C16.7036 18.3094 16.7701 18.2127 16.8152 18.1057C16.8604 17.9987 16.8832 17.8836 16.8824 17.7674V12.3749L11.3699 15.3749C11.2472 15.4432 11.1091 15.4791 10.9687 15.4791C10.8282 15.4791 10.6901 15.4432 10.5674 15.3749L5.2874 12.3599Z" fill="#231F20" />
            <path d="M3.63 10.9349V10.9199H5.28751L3.63 10.9349Z" fill="#231F20" />
            <path d="M16.8826 10.9799V10.9724H18.5326L16.8826 10.9799Z" fill="#231F20" />
            <path d="M22.1926 15.7501C21.9738 15.7501 21.7639 15.6632 21.6092 15.5085C21.4545 15.3538 21.3676 15.1439 21.3676 14.9251V10.3501H20.3626C20.1564 10.3305 19.9649 10.2347 19.8256 10.0814C19.6862 9.9282 19.609 9.72851 19.609 9.52138C19.609 9.31425 19.6862 9.11456 19.8256 8.96131C19.9649 8.80806 20.1564 8.71226 20.3626 8.69263H22.1926C22.4114 8.69263 22.6212 8.77955 22.7759 8.93426C22.9307 9.08898 23.0176 9.29882 23.0176 9.51763V14.9251C23.0176 15.1439 22.9307 15.3538 22.7759 15.5085C22.6212 15.6632 22.4114 15.7501 22.1926 15.7501Z" fill="#231F20" />
        </svg>


    ]
    const [lockIcon, freeIcon, backIcon, historyWatch , closeButton , video] = [<svg width="23" height="23" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 15C0 6.71573 6.71573 0 15 0C23.2843 0 30 6.71573 30 15C30 23.2843 23.2843 30 15 30C6.71573 30 0 23.2843 0 15Z" fill="#5C56D4" />
        <path d="M18.3334 12.9999V11.6666C18.3334 9.79992 16.8667 8.33325 15.0001 8.33325C13.1334 8.33325 11.6667 9.79992 11.6667 11.6666V12.9999C10.5334 12.9999 9.66675 13.8666 9.66675 14.9999V19.6666C9.66675 20.7999 10.5334 21.6666 11.6667 21.6666H18.3334C19.4667 21.6666 20.3334 20.7999 20.3334 19.6666V14.9999C20.3334 13.8666 19.4667 12.9999 18.3334 12.9999ZM13.0001 11.6666C13.0001 10.5333 13.8667 9.66659 15.0001 9.66659C16.1334 9.66659 17.0001 10.5333 17.0001 11.6666V12.9999H13.0001V11.6666Z" fill="white" />
        <path d="M15 28C7.8203 28 2 22.1797 2 15H-2C-2 24.3888 5.61116 32 15 32V28ZM28 15C28 22.1797 22.1797 28 15 28V32C24.3888 32 32 24.3888 32 15H28ZM15 2C22.1797 2 28 7.8203 28 15H32C32 5.61116 24.3888 -2 15 -2V2ZM15 -2C5.61116 -2 -2 5.61116 -2 15H2C2 7.8203 7.8203 2 15 2V-2Z" fill="white" />
    </svg>,
    <svg width="46" height="23" viewBox="0 0 60 30" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 15C0 6.71573 6.71573 0 15 0H45C53.2843 0 60 6.71573 60 15C60 23.2843 53.2843 30 45 30H15C6.71573 30 0 23.2843 0 15Z" fill="#5C56D4" />
        <path d="M22.5879 11.124V12.48H19.0959V14.628H21.7719V15.96H19.0959V19.5H17.4159V11.124H22.5879ZM28.0992 19.5L26.2512 16.236H25.4592V19.5H23.7792V11.124H26.9232C27.5712 11.124 28.1232 11.24 28.5792 11.472C29.0352 11.696 29.3752 12.004 29.5992 12.396C29.8312 12.78 29.9472 13.212 29.9472 13.692C29.9472 14.244 29.7872 14.744 29.4672 15.192C29.1472 15.632 28.6712 15.936 28.0392 16.104L30.0432 19.5H28.0992ZM25.4592 14.976H26.8632C27.3192 14.976 27.6592 14.868 27.8832 14.652C28.1072 14.428 28.2192 14.12 28.2192 13.728C28.2192 13.344 28.1072 13.048 27.8832 12.84C27.6592 12.624 27.3192 12.516 26.8632 12.516H25.4592V14.976ZM33.1467 12.48V14.58H35.9667V15.912H33.1467V18.132H36.3267V19.5H31.4667V11.112H36.3267V12.48H33.1467ZM39.5334 12.48V14.58H42.3534V15.912H39.5334V18.132H42.7134V19.5H37.8534V11.112H42.7134V12.48H39.5334Z" fill="white" />
        <path d="M15 2H45V-2H15V2ZM45 28H15V32H45V28ZM15 28C7.8203 28 2 22.1797 2 15H-2C-2 24.3888 5.61116 32 15 32V28ZM58 15C58 22.1797 52.1797 28 45 28V32C54.3888 32 62 24.3888 62 15H58ZM45 2C52.1797 2 58 7.8203 58 15H62C62 5.61116 54.3888 -2 45 -2V2ZM15 -2C5.61116 -2 -2 5.61116 -2 15H2C2 7.8203 7.8203 2 15 2V-2Z" fill="white" />
    </svg>,
    <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M22.6666 14.6668H12.5466L16.9466 10.2801C17.1977 10.029 17.3387 9.68849 17.3387 9.33342C17.3387 8.97835 17.1977 8.63782 16.9466 8.38675C16.6955 8.13568 16.355 7.99463 15.9999 7.99463C15.6449 7.99463 15.3043 8.13568 15.0533 8.38675L8.38661 15.0534C8.26522 15.1802 8.17007 15.3298 8.10661 15.4934C7.97325 15.818 7.97325 16.1821 8.10661 16.5068C8.17007 16.6704 8.26522 16.8199 8.38661 16.9468L15.0533 23.6134C15.1772 23.7384 15.3247 23.8376 15.4872 23.9053C15.6497 23.973 15.8239 24.0078 15.9999 24.0078C16.176 24.0078 16.3502 23.973 16.5127 23.9053C16.6752 23.8376 16.8227 23.7384 16.9466 23.6134C17.0716 23.4895 17.1708 23.342 17.2385 23.1795C17.3062 23.017 17.341 22.8428 17.341 22.6668C17.341 22.4907 17.3062 22.3165 17.2385 22.154C17.1708 21.9915 17.0716 21.844 16.9466 21.7201L12.5466 17.3334H22.6666C23.0202 17.3334 23.3594 17.1929 23.6094 16.9429C23.8595 16.6928 23.9999 16.3537 23.9999 16.0001C23.9999 15.6465 23.8595 15.3073 23.6094 15.0573C23.3594 14.8072 23.0202 14.6668 22.6666 14.6668Z" fill="#5C56D4" />
    </svg>,
    <svg width="18" height="18" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M15.0981 12.6338L13 11.4228V7C13 6.73478 12.8946 6.48043 12.7071 6.29289C12.5196 6.10536 12.2652 6 12 6C11.7348 6 11.4804 6.10536 11.2929 6.29289C11.1054 6.48043 11 6.73478 11 7V12C11 12.1756 11.0461 12.3481 11.1339 12.5001C11.2217 12.6522 11.3479 12.7784 11.5 12.8662L14.0981 14.3662C14.2119 14.432 14.3375 14.4746 14.4678 14.4918C14.598 14.509 14.7304 14.5004 14.8573 14.4664C14.9842 14.4324 15.1032 14.3737 15.2074 14.2938C15.3117 14.2138 15.3991 14.114 15.4648 14.0003C15.5305 13.8865 15.5731 13.7608 15.5902 13.6306C15.6073 13.5003 15.5986 13.368 15.5646 13.2411C15.5305 13.1142 15.4718 12.9952 15.3918 12.891C15.3117 12.7868 15.212 12.6994 15.0981 12.6338ZM12 2C10.0222 2 8.08879 2.58649 6.4443 3.6853C4.79981 4.78412 3.51809 6.3459 2.76121 8.17317C2.00433 10.0004 1.8063 12.0111 2.19215 13.9509C2.578 15.8907 3.53041 17.6725 4.92894 19.0711C6.32746 20.4696 8.10929 21.422 10.0491 21.8079C11.9889 22.1937 13.9996 21.9957 15.8268 21.2388C17.6541 20.4819 19.2159 19.2002 20.3147 17.5557C21.4135 15.9112 22 13.9778 22 12C21.9971 9.34874 20.9425 6.80691 19.0678 4.93219C17.1931 3.05746 14.6513 2.00295 12 2ZM12 20C10.4178 20 8.87104 19.5308 7.55544 18.6518C6.23985 17.7727 5.21447 16.5233 4.60897 15.0615C4.00347 13.5997 3.84504 11.9911 4.15372 10.4393C4.4624 8.88743 5.22433 7.46197 6.34315 6.34315C7.46197 5.22433 8.88743 4.4624 10.4393 4.15372C11.9911 3.84504 13.5997 4.00346 15.0615 4.60896C16.5233 5.21447 17.7727 6.23984 18.6518 7.55544C19.5308 8.87103 20 10.4177 20 12C19.9976 14.121 19.1539 16.1544 17.6542 17.6542C16.1544 19.1539 14.121 19.9976 12 20Z" fill="#777777" />
    </svg>,
    <svg width="12" height="12" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M20.5 2.5L18.75 0.75L10.5 9L2.25 0.75L0.5 2.5L8.75 10.75L0.5 19L2.25 20.75L10.5 12.5L18.75 20.75L20.5 19L12.25 10.75L20.5 2.5Z" fill="#777777"/>
    </svg>,
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0_2987_19461)">
    <path d="M21.5333 7.15238C21.383 7.05967 21.2099 7.01058 21.0333 7.01058C20.8567 7.01058 20.6836 7.05967 20.5333 7.15238L17 8.85714C16.9633 8.08651 16.631 7.35966 16.0724 6.82759C15.5137 6.29551 14.7715 5.99913 14 6H5C4.20435 6 3.44129 6.31607 2.87868 6.87868C2.31607 7.44129 2 8.20435 2 9L2 14.981C2 15.3749 2.0776 15.765 2.22836 16.129C2.37913 16.493 2.6001 16.8237 2.87868 17.1023C3.15726 17.3809 3.48797 17.6018 3.85195 17.7526C4.21593 17.9034 4.60603 17.981 5 17.981H14C14.7715 17.9818 15.5137 17.6854 16.0724 17.1534C16.631 16.6213 16.9633 15.8944 17 15.1238L20.5619 16.9048C20.6975 16.9742 20.8477 17.0101 21 17.0095C21.189 17.0128 21.3746 16.9597 21.5333 16.8571C21.6759 16.7662 21.7933 16.641 21.8748 16.4929C21.9564 16.3448 21.9994 16.1786 22 16.0095V8C22.005 7.82991 21.9644 7.66158 21.8823 7.51251C21.8003 7.36345 21.6797 7.23909 21.5333 7.15238ZM15.0095 14.9714C15.0164 15.1046 14.9952 15.2376 14.9473 15.3621C14.8995 15.4865 14.8261 15.5995 14.7318 15.6937C14.6376 15.788 14.5246 15.8614 14.4002 15.9093C14.2757 15.9571 14.1426 15.9783 14.0095 15.9714H5C4.87082 15.9716 4.74296 15.9455 4.62419 15.8947C4.50543 15.8438 4.39824 15.7694 4.30915 15.6759C4.22007 15.5823 4.15094 15.4716 4.10598 15.3505C4.06102 15.2294 4.04116 15.1004 4.04762 14.9714V8.95238C4.04116 8.82337 4.06102 8.69438 4.10598 8.57328C4.15094 8.45218 4.22007 8.34149 4.30915 8.24795C4.39824 8.15441 4.50543 8.07996 4.62419 8.02915C4.74296 7.97834 4.87082 7.95222 5 7.95238H14.0095C14.1426 7.94554 14.2757 7.96672 14.4002 8.01456C14.5246 8.06239 14.6376 8.13582 14.7318 8.23007C14.8261 8.32433 14.8995 8.43733 14.9473 8.56175C14.9952 8.68618 15.0164 8.81926 15.0095 8.95238V14.9714ZM19.9905 14.3333L17.0095 12.8476V11.0952L19.9905 9.6V14.3333Z" fill="#231F20"/>
    <path d="M14.0096 7.95243H5.00008C4.8709 7.95227 4.74304 7.97838 4.62428 8.0292C4.50551 8.08001 4.39832 8.15445 4.30923 8.24799C4.22015 8.34154 4.15102 8.45222 4.10606 8.57333C4.0611 8.69443 4.04124 8.82341 4.0477 8.95243V14.9715C4.04124 15.1005 4.0611 15.2295 4.10606 15.3506C4.15102 15.4717 4.22015 15.5824 4.30923 15.6759C4.39832 15.7695 4.50551 15.8439 4.62428 15.8947C4.74304 15.9455 4.8709 15.9716 5.00008 15.9715H14.0096C14.1427 15.9783 14.2758 15.9571 14.4002 15.9093C14.5247 15.8615 14.6377 15.788 14.7319 15.6938C14.8262 15.5995 14.8996 15.4865 14.9474 15.3621C14.9953 15.2377 15.0164 15.1046 15.0096 14.9715V8.95243C15.0164 8.8193 14.9953 8.68622 14.9474 8.5618C14.8996 8.43737 14.8262 8.32438 14.7319 8.23012C14.6377 8.13586 14.5247 8.06244 14.4002 8.0146C14.2758 7.96677 14.1427 7.94559 14.0096 7.95243ZM11.3048 12.2L8.33341 13.9239C8.27832 13.9547 8.21626 13.971 8.15312 13.9712C8.08997 13.9714 8.02782 13.9555 7.97253 13.925C7.91724 13.8945 7.87064 13.8504 7.83713 13.7969C7.80363 13.7433 7.78432 13.6822 7.78103 13.6191V10.1715C7.78276 10.1076 7.80093 10.0452 7.83379 9.99044C7.86666 9.93564 7.91311 9.89025 7.96865 9.85865C8.02419 9.82705 8.08694 9.81031 8.15084 9.81006C8.21474 9.8098 8.27762 9.82603 8.33341 9.85719L11.3048 11.5715C11.3603 11.6031 11.4063 11.6489 11.4384 11.7041C11.4704 11.7592 11.4873 11.8219 11.4873 11.8858C11.4873 11.9496 11.4704 12.0123 11.4384 12.0675C11.4063 12.1227 11.3603 12.1684 11.3048 12.2Z" fill="#4D6BE8"/>
    <path d="M19.9905 9.6001V14.3334L17.0095 12.8477V11.0953L19.9905 9.6001Z" fill="#F5E960"/>
    <path d="M11.3047 12.2001L8.33326 13.9239C8.27817 13.9547 8.21611 13.971 8.15297 13.9712C8.08982 13.9714 8.02767 13.9555 7.97238 13.925C7.91709 13.8945 7.87049 13.8504 7.83698 13.7969C7.80348 13.7433 7.78417 13.6822 7.78088 13.6191V10.1715C7.78261 10.1076 7.80078 10.0452 7.83364 9.99045C7.86651 9.93565 7.91296 9.89026 7.9685 9.85865C8.02404 9.82705 8.08679 9.81032 8.15069 9.81006C8.21459 9.80981 8.27747 9.82604 8.33326 9.85719L11.3047 11.5715C11.3601 11.6031 11.4062 11.6489 11.4382 11.7041C11.4703 11.7593 11.4872 11.8219 11.4872 11.8858C11.4872 11.9496 11.4703 12.0123 11.4382 12.0675C11.4062 12.1227 11.3601 12.1684 11.3047 12.2001Z" fill="#F5E960"/>
    </g>
    <defs>
    <clipPath id="clip0_2987_19461">
    <rect width="20" height="11.981" fill="white" transform="translate(2 6)"/>
    </clipPath>
    </defs>
    </svg>
    



    ];

    let getAllSearch = async (category, searchInput) => {
        if(searchInput!==null && searchInput !== '' && searchInput !== ' ') {
            setLoading(true);

        await axios({
            url: apiUrl.searchUrl + category + "?query=" + searchInput + "&user-uuid=" + getUserUuid(),
            method: "GET",
            headers: getHeaders(),
        }).then((response) => {
            let res = response.data;
            setResponseData(res.Results);
            if(res.Results !== null && res.Results.length <= 0 && typeof responseData !== 'undefined') {setNoDataVisibility(true)}
            else if (res.Results !== null && res.Results.length > 0 && typeof responseData !== 'undefined'){setNoDataVisibility(false)}  
        }).catch((error) => { });
        setLoading(false);
        }
        
    }
    useEffect( async () => {
        let temp = location.pathname.split('/')[2];
    //    await setCategory(location.pathname.split('/')[2]);

        if(temp==="Academics"){setHistoryActivityVisible(false);setHistoryNewsVisible(false);setHistoryAllVisible(false);setHistoryAcadVisible(true);}
        else if(temp==="News"){setHistoryActivityVisible(false);setHistoryNewsVisible(true);setHistoryAllVisible(false);setHistoryAcadVisible(false);}
        else if(temp==="Activities"){setHistoryActivityVisible(true);setHistoryNewsVisible(false);setHistoryAllVisible(false);setHistoryAcadVisible(false);}
        else {setHistoryActivityVisible(false);setHistoryNewsVisible(false);setHistoryAllVisible(true);setHistoryAcadVisible(false);}
        // console.log(temp);
        console.log(category);
    }, [location]);


    // ***STORE IN LOCAL STORAGE ***


    const searchHistoryInLocal = () => {

        if (search.get !== null && search.get !== '') {
            if (localStorage.getItem('searchHistory') == null) {

                localStorage.setItem('searchHistory', '[]');
            };
            let old_data = JSON.parse(localStorage.getItem('searchHistory'));
            old_data.push(search.get);
            old_data = old_data.filter(function (item,pos,self){
                return self.indexOf(item) == pos;
            })
            localStorage.setItem('searchHistory', JSON.stringify(old_data));
        }
    }
    const searchHistoryInLocalNews = () => {

        if (search.get !== null && search.get !== '') {
            if (localStorage.getItem('searchHistoryNews') == null) {

                localStorage.setItem('searchHistoryNews', '[]');
            };
            let old_data = JSON.parse(localStorage.getItem('searchHistoryNews'));
            old_data.push(search.get);
            old_data = old_data.filter(function (item,pos,self){
                return self.indexOf(item) == pos;
            })
            localStorage.setItem('searchHistoryNews', JSON.stringify(old_data));
        }
    }
    const searchHistoryInLocalActivity = () => {

        if (search.get !== null && search.get !== '') {
            if (localStorage.getItem('searchHistoryActivity') == null) {

                localStorage.setItem('searchHistoryActivity', '[]');
            };
            let old_data = JSON.parse(localStorage.getItem('searchHistoryActivity'));
            old_data.push(search.get);
            old_data = old_data.filter(function (item,pos,self){
                return self.indexOf(item) == pos;
            })
            localStorage.setItem('searchHistoryActivity', JSON.stringify(old_data));
        }
    }
    const searchHistoryInLocalAcademics = () => {

        if (search.get !== null && search.get !== '') {
            if (localStorage.getItem('searchHistoryAcademics') == null) {

                localStorage.setItem('searchHistoryAcademics', '[]');
            };
            let old_data = JSON.parse(localStorage.getItem('searchHistoryAcademics'));
            old_data.push(search.get);
            old_data = old_data.filter(function (item,pos,self){
                return self.indexOf(item) == pos;
            })
            localStorage.setItem('searchHistoryAcademics', JSON.stringify(old_data));
        }
    }


// ***END STORE IN LOCAL STORAGE***

    // useEffect(()=>{
        
    //     if(search.get !== null || search.get !== '' || search.get !== ' '){
    //     getAllSearch(category, search.get);}},[location])


    useEffect(()=>{
        
    
    getAllSearch(category, search.get);},[location])

    let previousSearch = JSON.parse(localStorage.getItem('searchHistory'));
    if (previousSearch !== null) {
        previousSearch = previousSearch.reverse();
        previousSearch = previousSearch.filter(function (item, pos, self) {
            return self.indexOf(item) == pos;
        })
    }
    const [sHistory, setSHistory] = useState(previousSearch);



    let previousSearchNews = JSON.parse(localStorage.getItem('searchHistoryNews'));
    if (previousSearchNews !== null) {
        previousSearchNews = previousSearchNews.reverse();
        previousSearchNews = previousSearchNews.filter(function (item, pos, self) {
            return self.indexOf(item) == pos;
        })
    }
    const [sHistoryNews, setSHistoryNews] = useState(previousSearchNews);



    let previousSearchActivity = JSON.parse(localStorage.getItem('searchHistoryActivity'));
    if (previousSearchActivity !== null) {
        previousSearchActivity = previousSearchActivity.reverse();
        previousSearchActivity = previousSearchActivity.filter(function (item, pos, self) {
            return self.indexOf(item) == pos;
        })
    }
    const [sHistoryActivity, setSHistoryActivity] = useState(previousSearchActivity);



    let previousSearchAcademics = JSON.parse(localStorage.getItem('searchHistoryAcademics'));
    if (previousSearchAcademics !== null) {
        previousSearchAcademics = previousSearchAcademics.reverse();
        previousSearchAcademics = previousSearchAcademics.filter(function (item, pos, self) {
            return self.indexOf(item) == pos;
        })
    }
    const [sHistoryAcademics, setSHistoryAcademics] = useState(previousSearchAcademics);


    useEffect(() => {
        if (search.get === null || search.get === '' || search.get === ' ') {
            setVisibleHistory(true)
            setNoDataVisibility(false)
        }
        else {
            setVisibleHistory(false)
        }

    }, [search.get])

    let popupContent = isApp() ? "This content is available only for exclusive members." : "This content is for our premium users. You may contact us on +91 9880678169 or namaskar@summachar.in";
    
    const historyOnclickHandler = (category,data)=>{
        getAllSearch(category, data);
    }


    const deleteHistory = (index)=>{
        let temp = location.pathname.split('/')[2];
        if(temp==="Academics") {
            if (localStorage.getItem('searchHistoryAcademics') == null) {
                localStorage.setItem('searchHistoryAcademics', '[]');
            };
            let searchHistoryAcademics = JSON.parse(localStorage.getItem("searchHistoryAcademics"));
            searchHistoryAcademics = searchHistoryAcademics.reverse();
            searchHistoryAcademics.splice(index,1);
            localStorage.setItem("searchHistoryAcademics",JSON.stringify(searchHistoryAcademics));
            searchHistoryAcademics = JSON.parse(localStorage.getItem("searchHistoryAcademics"));
            setSHistoryAcademics(searchHistoryAcademics);
            
    }
        else if(temp==="News") {
            if (localStorage.getItem('searchHistoryNews') == null) {
                localStorage.setItem('searchHistoryNews', '[]');
            };
            let searchHistoryNews = JSON.parse(localStorage.getItem("searchHistoryNews"));
            searchHistoryNews = searchHistoryNews.reverse();
            searchHistoryNews.splice(index,1);
            localStorage.setItem("searchHistoryNews",JSON.stringify(searchHistoryNews));
            searchHistoryNews = JSON.parse(localStorage.getItem("searchHistoryNews"));
            setSHistoryNews(searchHistoryNews);
        }
        else if(temp==="Activities") {
            if (localStorage.getItem('searchHistoryActivity') == null) {
                localStorage.setItem('searchHistoryActivity', '[]');
            };
            let searchHistoryActivity = JSON.parse(localStorage.getItem("searchHistoryActivity"));
            searchHistoryActivity = searchHistoryActivity.reverse();
            searchHistoryActivity.splice(index,1);
            localStorage.setItem("searchHistoryActivity",JSON.stringify(searchHistoryActivity));
            searchHistoryActivity = JSON.parse(localStorage.getItem("searchHistoryActivity"));
            setSHistoryActivity(searchHistoryActivity);
        }
        else {
            if (localStorage.getItem('searchHistory') == null) {
                localStorage.setItem('searchHistory', '[]');
            };
            let searchHistory = JSON.parse(localStorage.getItem("searchHistory"));
            searchHistory = searchHistory.reverse();
            searchHistory.splice(index,1);
            localStorage.setItem("searchHistory",JSON.stringify(searchHistory));
            searchHistory = JSON.parse(localStorage.getItem("searchHistory"));
            setSHistory(searchHistory);
            
        }
    }


    const deleteAllHistory = ()=>{
        let temp = location.pathname.split('/')[2];
        if(temp==="Academics") {
            if (localStorage.getItem('searchHistoryAcademics') == null) {
                localStorage.setItem('searchHistoryAcademics', '[]');
            };
            let searchHistoryAcademics = JSON.parse(localStorage.getItem("searchHistoryAcademics"));
            searchHistoryAcademics.splice(0,searchHistoryAcademics.length);
            localStorage.setItem("searchHistoryAcademics",JSON.stringify(searchHistoryAcademics));
            searchHistoryAcademics = JSON.parse(localStorage.getItem("searchHistoryAcademics"));
            setSHistoryAcademics(searchHistoryAcademics);
        }
        else if(temp==="News"){
            if (localStorage.getItem('searchHistoryNews') == null) {
                localStorage.setItem('searchHistoryNews', '[]');
            };
            let searchHistoryNews = JSON.parse(localStorage.getItem("searchHistoryNews"));
            searchHistoryNews.splice(0,searchHistoryNews.length);
            localStorage.setItem("searchHistoryNews",JSON.stringify(searchHistoryNews));
            searchHistoryNews = JSON.parse(localStorage.getItem("searchHistoryNews"));
            setSHistoryNews(searchHistoryNews);
        }
        else if(temp==="Activities"){
            if (localStorage.getItem('searchHistoryActivity') == null) {
                localStorage.setItem('searchHistoryActivity', '[]');
            };
            let searchHistoryActivity = JSON.parse(localStorage.getItem("searchHistoryActivity"));
            searchHistoryActivity.splice(0,searchHistoryActivity.length);
            localStorage.setItem("searchHistoryActivity",JSON.stringify(searchHistoryActivity));
            searchHistoryActivity = JSON.parse(localStorage.getItem("searchHistoryActivity"));
            setSHistoryActivity(searchHistoryActivity);
        }
        else{
            if (localStorage.getItem('searchHistory') == null) {
                localStorage.setItem('searchHistory', '[]');
            };
            let searchHistory = JSON.parse(localStorage.getItem("searchHistory"));
            searchHistory.splice(0,searchHistory.length);
            localStorage.setItem("searchHistory",JSON.stringify(searchHistory));
            searchHistory = JSON.parse(localStorage.getItem("searchHistory"));
            setSHistory(searchHistory);
        }
    }

    // console.log("sHistory : " + sHistory);
    // console.log("sHistoryNews : " + sHistoryNews);
    // console.log("sHistoryActivity : " + sHistoryActivity);
    // console.log("sHistoryAcademics : " + sHistoryAcademics);
    
    // ****  main return section ****
    
    useEffect(()=>{console.log(window.innerHeight);},[window.innerHeight])
    
    return (
        <>
            {isVisible && <PremiumPopUp changeVisibility={changeVisibility} description={popupContent}></PremiumPopUp>}

            {/* **** input section **** */}

            <div className=' input-container padding-l-r'  >
                <div className='input-icons  df center' id='inputIcon'>
                    <i className='input-back-icon ' >
                        {/* <Link to={"/home"}>{backIcon}</Link> */}
                        <i onClick={()=>{history.goBack();}}>{backIcon}</i>
                        {/* <Link to={actions}>{backIcon}</Link> */}
                        {/* <i onClick={()=>{history.push(actions); console.log(actions);}}>{backIcon}</i> */}
                    </i>
                    <div className='input-txt'>
                        <form  onSubmit={async (e) => {
                            // history.push(actions); console.log(actions);
                            // history.push("/search/All/result");
                            e.preventDefault();
                            if (search.get === null || search.get === '' || search.get===' ') { }
                            else {

                                await getAllSearch(category, search.get);
                                let temp = location.pathname.split('/')[2];

                                if(temp==="Academics"){
                                    searchHistoryInLocalAcademics();
                                let preSearchAcad = JSON.parse(localStorage.getItem('searchHistoryAcademics'));


                                if (previousSearchAcademics !== null) {
                                    preSearchAcad = preSearchAcad.reverse();
                                    preSearchAcad = preSearchAcad.filter(function (item, pos, self) {
                                        return self.indexOf(item) == pos;
                                    })
                                    setSHistoryAcademics(preSearchAcad);
                                }
                                }
                                else if(temp==="News"){
                                    searchHistoryInLocalNews();
                                let preSearchNews = JSON.parse(localStorage.getItem('searchHistoryNews'));


                                if (previousSearchNews !== null) {
                                    preSearchNews = preSearchNews.reverse();
                                    preSearchNews = preSearchNews.filter(function (item, pos, self) {
                                        return self.indexOf(item) == pos;
                                    })
                                    setSHistoryNews(preSearchNews);
                                }
                                }
                                else if(temp==="Activities") {
                                    searchHistoryInLocalActivity();
                                let preSearchActivity = JSON.parse(localStorage.getItem('searchHistoryActivity'));


                                if (previousSearchActivity !== null) {
                                    preSearchActivity = preSearchActivity.reverse();
                                    preSearchActivity = preSearchActivity.filter(function (item, pos, self) {
                                        return self.indexOf(item) == pos;
                                    })
                                    setSHistoryActivity(preSearchActivity);
                                }
                                }

                                else {
                                    searchHistoryInLocal();
                                let preSearch = JSON.parse(localStorage.getItem('searchHistory'));


                                if (previousSearch !== null) {
                                    preSearch = preSearch.reverse();
                                    preSearch = preSearch.filter(function (item, pos, self) {
                                        return self.indexOf(item) == pos;
                                    })
                                    setSHistory(preSearch);
                                }
                                }
                                
                            }
                        }}>
                            <input type="text" value={search.get} className='input-field typo-sub-headings'
                                
                                // value={search.get ? search.get : ""}
                                onChange={(e) => {
                                    search.set(e.target.value)
                                }}
                                placeholder="Search something"
                                onFocus={() => {
                                    document.getElementById("inputIcon").style.backgroundColor = "#fff";
                                    document.getElementById("inputIcon").style.border = "0.5px solid #5c56d4";
                                }}
                                onBlur={() => {
                                    document.getElementById("inputIcon").style.backgroundColor = "#f5f5f5";
                                    document.getElementById("inputIcon").style.border = "0.5px solid #f5f5f5";

                                }}
                            /></form>
                    </div>
                    <i className='icon m-r-primary ' onClick={async (e) => {
                        e.preventDefault();
                        if (search.get === null) { }
                        else {

                            await getAllSearch(category, search.get);

                            searchHistoryInLocal();
                            let preSearch = JSON.parse(localStorage.getItem('searchHistory'));
                            if (previousSearch !== null) {
                                preSearch = preSearch.reverse();
                                preSearch = preSearch.filter(function (item, pos, self) {
                                    return self.indexOf(item) == pos;
                                })
                                setSHistory(preSearch);
                            }
                        }
                    }}>
                        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M18.0917 16.9083L15 13.8416C16.2001 12.3453 16.7813 10.446 16.6241 8.53434C16.4668 6.62267 15.5831 4.84391 14.1546 3.56379C12.7262 2.28368 10.8615 1.59951 8.94415 1.65198C7.02674 1.70445 5.20231 2.48956 3.84599 3.84587C2.48968 5.20219 1.70457 7.02662 1.6521 8.94402C1.59963 10.8614 2.2838 12.7261 3.56391 14.1545C4.84403 15.583 6.62279 16.4667 8.53446 16.6239C10.4461 16.7812 12.3454 16.2 13.8417 14.9999L16.9084 18.0666C16.9858 18.1447 17.078 18.2067 17.1796 18.249C17.2811 18.2913 17.39 18.3131 17.5 18.3131C17.6101 18.3131 17.719 18.2913 17.8205 18.249C17.9221 18.2067 18.0142 18.1447 18.0917 18.0666C18.2419 17.9112 18.3259 17.7035 18.3259 17.4874C18.3259 17.2713 18.2419 17.0636 18.0917 16.9083V16.9083ZM9.16671 14.9999C8.01299 14.9999 6.88517 14.6578 5.92588 14.0168C4.9666 13.3759 4.21892 12.4648 3.77741 11.3989C3.3359 10.333 3.22038 9.16012 3.44546 8.02856C3.67054 6.897 4.22611 5.8576 5.04192 5.0418C5.85773 4.22599 6.89713 3.67042 8.02868 3.44534C9.16024 3.22026 10.3331 3.33578 11.399 3.77729C12.4649 4.2188 13.376 4.96647 14.0169 5.92576C14.6579 6.88505 15 8.01286 15 9.16659C15 10.7137 14.3855 12.1974 13.2915 13.2914C12.1975 14.3853 10.7138 14.9999 9.16671 14.9999V14.9999Z" fill="#5C56D4" />
                        </svg>
                    </i>
                </div>
            </div>

{/* ****  navbar section  **** */}

            <div style={{ width: "100%" }} className=" padding-l-r" >
                <nav className="perform-navbar margin-top ">

                    <ul
                        className=" txt-gray font-bold scrollabar-search typo-sub-headings"
                        style={{
                            fontFamily: "Poppins",
                            fontWeight: 600,
                            display: "flex",
                            flexDirection: "row",
                            textDecorationLine: "none",
                            padding: "8px 0px",
                        }}
                    >
                        <Link className={`perform-navbar df center ${location.pathname.search("All") != -1 ? " active" : "tab-hoverable"}`} to={"/search/All"} onClick={(e)=>{e.preventDefault(); history.push("/search/All"); setCategory("All");}} >
                            <>{location.pathname.split('/')[2] === "All" ? svgIconActive[0] : svgIcon[0]}</><div className='m-l-8 p-t-2'>All</div>
                        </Link>
                        <Link className={`perform-navbar df center ${location.pathname.search("News") != -1 ? " active" : "tab-hoverable"}`} to={"/search/News"} onClick={(e)=>{e.preventDefault(); history.push("/search/News"); setCategory("News");}}>
                            <>{location.pathname.split('/')[2] === "News" ? svgIconActive[1] : svgIcon[1]}</><div className='m-l-8 p-t-2'>News</div>
                        </Link>
                        <Link className={`perform-navbar df center ${location.pathname.search("Activities") != -1 ? " active" : "tab-hoverable"}`} to={"/search/Activities"} onClick={(e)=>{e.preventDefault(); history.push("/search/Activities"); setCategory("Activities");}}>
                            <>{location.pathname.split('/')[2] === "Activities" ? svgIconActive[2] : svgIcon[2]}</><div className='m-l-8 p-t-2' >Activities</div>
                        </Link>
                        <Link className={`perform-navbar df center ${location.pathname.search("Academics") != -1 ? " active" : "tab-hoverable"}`} to={"/search/Academics"} onClick={(e)=>{e.preventDefault(); history.push("/search/Academics"); setCategory("Academics");}} >
                            <>{location.pathname.split('/')[2] === "Academics" ? svgIconActive[3] : svgIcon[3]}</><div className='m-l-8 p-t-2'>Academics</div>
                        </Link>
                    </ul>
                </nav>
            </div>
{/* ****clear all button **** */}

                     {location.pathname.split('/')[2] === "All"  && visibleHistory && sHistory!==null && sHistory.length > 0 &&   <div className='padding-l-r df'> <button className='txt-gray typo-Description m-l-auto' onClick={()=>{deleteAllHistory();}}><u>Clear all</u></button> </div>}
                     {location.pathname.split('/')[2] === "News" && visibleHistory && sHistoryNews!==null && sHistoryNews.length > 0 &&   <div className='padding-l-r df'> <button className='txt-gray typo-Description m-l-auto' onClick={()=>{deleteAllHistory();}}><u>Clear all</u></button> </div>}
                     {location.pathname.split('/')[2] === "Activities" &&visibleHistory && sHistoryActivity!==null && sHistoryActivity.length > 0 &&   <div className='padding-l-r df'> <button className='txt-gray typo-Description m-l-auto' onClick={()=>{deleteAllHistory();}}><u>Clear all</u></button> </div>}
                     {location.pathname.split('/')[2] === "Academics" && visibleHistory && sHistoryAcademics!==null && sHistoryAcademics.length > 0 &&   <div className='padding-l-r df'> <button className='txt-gray typo-Description m-l-auto' onClick={()=>{deleteAllHistory();}}><u>Clear all</u></button> </div>}

{/* **** search result section **** */}


            <div className='search-result-container  scrollable  margin-result fit-content padding-l-r' >

                {!noDataVisibility && visibleHistory !== true && loading && <div className='row center df'>
                                    <img
                                      src={Small_loader}
                                      style={{
                                        width: '40px',
                                        height: '40px'
                                      }}
                                      className='fit-content'
                                      alt=''
                                    />
                                  </div>}

                <> {loading === false && <ul>
                    {
                       !noDataVisibility && visibleHistory !== true && typeof responseData !== 'undefined' && responseData!==null && responseData.length > 0 && responseData.map((data, index) => {
                            return (
                                <div className='df margin-bottom'>
                                    <div>

                                        
                                        {data.icon_type === "Video" && <i>{video}</i>}
                                        {(data.icon_type === "Concept" || data.icon_type === "Story") && <i>{svgIconActive[3]}</i>}
                                        {data.icon_type === "Quiz" && <i>{svgIconActive[2]}</i>}
                                        {data.icon_type === "News" && <i>{svgIconActive[1]}</i>}
                                        {data.icon_type === "Activity" && <i>{svgIconActive[2]}</i>}

                                    </div>
                                    <div className='margin-left-li margin-right-li'>
                                        <li style={{ color: "#000" }} key={index} className="typo-sub-headings popins  "

                                            onClick={
                                                data.is_free_access ? () => { history.push("/" + data.resource_type + "/" + data.slug); } : () => { changeVisibility(true); }
                                            }

                                        >{data.title}<br />
                                            <div className='txt-gray typo-Description'  >
                                                {data.icon_type === "Story"  && <span>Concept</span>}
                                                {data.icon_type === "Video" && <span>Video</span>}
                                                {data.icon_type === "Quiz" && <span>Quiz</span>}
                                                {data.icon_type === "News" && <span>News</span>}
                                                {data.icon_type === "Activity" && <span>Quiz</span>}</div>
                                        </li>
                                    </div>
                                    <div>
                                        {data.is_free_access ? <i>{freeIcon}</i> : <i>{lockIcon}</i>}
                                    </div>
                                </div>
                            );
                        }) 
                    }

                    {
                        noDataVisibility &&  typeof responseData !== 'undefined' && responseData!==null && responseData.length <= 0 && <NoData></NoData>
                    }



                    {
                      historyAllVisible && !noDataVisibility && visibleHistory && typeof sHistory !== 'undefined' && sHistory !== null && sHistory.length > 0 && sHistory.map((data, index) => {
                            return (
                                <div className='df row-center main-li'>
                                <li key={index} className='txt-gray typo-Description df row-center margin-bottom' 

                                    onClick={ async () => {  await search.set(data) ;
                                        
                                        historyOnclickHandler(category,data);

                                    }}
                                >
                                    <div  >{historyWatch}</div>
                                    <div className='margin-left-li p-b-4' >{data}</div>
                                </li>
                                <button onClick={()=>{deleteHistory(index);}}>{closeButton}</button>
                                </div>
                            )
                        })
                    }

{
                      historyNewsVisible && !noDataVisibility && visibleHistory && typeof sHistoryNews !== 'undefined' && sHistoryNews !== null && sHistoryNews.length > 0 && sHistoryNews.map((data, index) => {
                            return (
                                <div className='df row-center main-li'>
                                <li key={index} className='txt-gray typo-Description df row-center margin-bottom' 

                                    onClick={ async () => {  await search.set(data) ;
                                        
                                        historyOnclickHandler(category,data);

                                    }}
                                >
                                    <div  >{historyWatch}</div>
                                    <div className='margin-left-li p-b-4' >{data}</div>
                                </li>
                                <button onClick={()=>{deleteHistory(index);}}>{closeButton}</button>
                                </div>
                            )
                        })
                    }

{
                      historyActivityVisible && !noDataVisibility && visibleHistory && typeof sHistoryActivity !== 'undefined' && sHistoryActivity !== null && sHistoryActivity.length > 0 && sHistoryActivity.map((data, index) => {
                            return (
                                <div className='df row-center main-li'>
                                <li key={index} className='txt-gray typo-Description df row-center margin-bottom' 

                                    onClick={ async () => {  await search.set(data) ;
                                        
                                        historyOnclickHandler(category,data);

                                    }}
                                >
                                    <div  >{historyWatch}</div>
                                    <div className='margin-left-li p-b-4' >{data}</div>
                                </li>
                                <button onClick={()=>{deleteHistory(index);}}>{closeButton}</button>
                                </div>
                            )
                        })
                    }

{
                      historyAcadVisible && !noDataVisibility && visibleHistory && typeof sHistoryAcademics !== 'undefined' && sHistoryAcademics !== null && sHistoryAcademics.length > 0 && sHistoryAcademics.map((data, index) => {
                            return (
                                <div className='df row-center main-li'>
                                <li key={index} className='txt-gray typo-Description df row-center margin-bottom' 

                                    onClick={ async () => {  await search.set(data) ;
                                        
                                        historyOnclickHandler(category,data);

                                    }}
                                >
                                    <div  >{historyWatch}</div>
                                    <div className='margin-left-li p-b-4' >{data}</div>
                                </li>
                                <button onClick={()=>{deleteHistory(index);}}>{closeButton}</button>
                                </div>
                            )
                        })
                    }

                    

                </ul>
                }
                </>
            </div>
        </>
    )
}

export default SearchPage